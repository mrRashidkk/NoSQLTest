// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NoSQLTest;

namespace NoSQLTest.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("NoSQLTest.Entities.AttributeType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AttributeTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("90f6e145-f8db-4552-bff9-490238047ee5"),
                            Label = "System.Boolean"
                        },
                        new
                        {
                            Id = new Guid("26b9fbf2-ffa7-45c1-8ffc-0ce4cdd86d2f"),
                            Label = "System.String"
                        },
                        new
                        {
                            Id = new Guid("d95cdd63-3c29-45fd-a353-dee2f174a86b"),
                            Label = "System.DateTime"
                        },
                        new
                        {
                            Id = new Guid("518fee74-8537-4f4a-874b-35f32b24c282"),
                            Label = "System.Int32"
                        },
                        new
                        {
                            Id = new Guid("19f00918-4b2e-40b6-ae9d-6ea2a3682270"),
                            Label = "System.Double"
                        });
                });

            modelBuilder.Entity("NoSQLTest.Entities.EntityAttribute", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AttributeTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EntityTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("InnerLabel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AttributeTypeId");

                    b.HasIndex("EntityTypeId");

                    b.ToTable("EntityAttributes");
                });

            modelBuilder.Entity("NoSQLTest.Entities.EntityType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EntityTypes");
                });

            modelBuilder.Entity("NoSQLTest.Entities.EntityAttribute", b =>
                {
                    b.HasOne("NoSQLTest.Entities.AttributeType", "AttributeType")
                        .WithMany()
                        .HasForeignKey("AttributeTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NoSQLTest.Entities.EntityType", "EntityType")
                        .WithMany("Attributes")
                        .HasForeignKey("EntityTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
